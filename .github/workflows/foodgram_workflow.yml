name: foodgram_workflow

on: [push]

jobs:
  tests:
    name: test PEP8 and pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: check out your repo
        uses: actions/checkout@v3

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort six
          pip install -r backend/requirements.txt
      - name: run test
        run: |
          python -m flake8
          

  build_push_to_docker_hub:
    if: github.ref == 'refs/heads/master'
    name: push docker image to docker hub
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: check out the repo
        uses: actions/checkout@v3

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: login docker hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: push image to docker hub
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./backend/Dockerfile
          tags: ${{secrets.DOCKER_USERNAME}}/foodgram_backend:latest

#      - name: push image to docker hub
#        uses: docker/build-push-action@v4
#        with:
#          push: true
#          file: ./frontend/Dockerfile
#          tags: ${{secrets.DOCKER_USERNAME}}/foodgram_frontend:lates


  deploy:
    name: deploy to the server
    runs-on: ubuntu-latest
    needs: build_push_to_docker_hub

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.SERVER_USERNAME}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.PASSPHRASE}}
          script: |
            sudo systemctl stop nginx
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo DATABASE=${{ secrets.DATABASE }} >> .env
            sudo docker pull ${{secrets.DOCKER_USERNAME}}/foodgram_backend:latest
            sudo docker-compose up -d --build
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose exec -T web python manage.py collectstatic --no-input

  send_message:
    name: send message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
